{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Add partition to Athena table based on CloudWatch Event.",
  "Parameters": {
    "Database": {
      "Type": "String",
      "Description": "Database Name",
      "MinLength": 1
    },
    "Table": {
      "Type": "String",
      "Description": "Table Name",
      "MinLength": 1
    },
    "QueryResultLocation": {
      "Type": "String",
      "Description": "Where to store the results (in S3Uri format). Include the trailing slash.",
      "MinLength": 6,
      "AllowedPattern": "^s3://.*/$",
      "ConstraintDescription": "must be a valid S3Uri (s3://bucketname/prefix/)"
    },
    "Location": {
      "Type": "String",
      "Description": "Location of ELB Access Logs (in S3Uri format) Include the trailing slash.",
      "MinLength": 6,
      "AllowedPattern": "^s3://.*/$",
      "ConstraintDescription": "must be a valid S3Uri (s3://bucketname/prefix/)"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Amazon Athena Configuration"
          },
          "Parameters": [
            "Database",
            "Table",
            "QueryResultLocation"
          ]
        },
        {
          "Label": {
            "default": "Amazon S3 Configuration"
          },
          "Parameters": [
            "Location"
          ]
        }
      ]
    }
  },
  "Resources": {
    "AthenaAddPartitionFunction": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "ExecutionRole"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "athenaaddpartition",
          "S3Key": "lambda_function.zip"
        },
        "Handler": "athena-add-partition/lambda_function.lambda_handler",
        "Runtime": "python3.6",
        "Description": "",
        "MemorySize": 128,
        "Timeout": 5,
        "Role": {
          "Fn::GetAtt": [
            "ExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "AthenaAddPartitionScheduledEvent": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "",
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AthenaAddPartitionFunction",
                "Arn"
              ]
            },
            "Id": "TargetFunctionV1",
            "Input": {
              "Fn::Join": [
                "",
                [
                  "{\"database\":\"",
                  {
                    "Ref": "Database"
                  },
                  "\",\"table\":\"",
                  {
                    "Ref": "Table"
                  },
                  "\",\"location\":\"",
                  {
                    "Ref": "Location"
                  },
                  "\",\"query_result_location\":\"",
                  {
                    "Ref": "QueryResultLocation"
                  },
                  "\"}"
                ]
              ]
            }
          }
        ]
      }
    },
    "PermissionForEventsToInvokeLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AthenaAddPartitionFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AthenaAddPartitionScheduledEvent",
            "Arn"
          ]
        }
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/AmazonAthenaFullAccess",
          "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
        ]
      }
    }
  }
}
